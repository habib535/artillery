/*! JSONPatcherProxy version: 0.0.9 */
var JSONPatcherProxy=function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.i=function(a){return a},b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=0)}([function(a){'use strict';/*!
 * https://github.com/Palindrom/JSONPatcherProxy
 * (c) 2017 Starcounter 
 * MIT license
 */const b=function(){function a(a){return-1==a.indexOf('/')&&-1==a.indexOf('~')?a:a.replace(/~/g,'~0').replace(/\//g,'~1')}function b(a,b){const c=[];for(let d=a.parenthoodMap.get(b);d&&d.path;)c.unshift(d.path),d=a.parenthoodMap.get(d.parent);if(c.length){const a=c.join('/');return'/'+a}return''}function c(c,d,e,f){const g=b(c,d),h=g+'/'+a(e);if(c.proxifiedObjectsMap.has(f)){const a=c.proxifiedObjectsMap.get(f);c.parenthoodMap.set(a.originalObject,{parent:d,path:e})}const i=c.proxifiedObjectsMap.get(f);i&&!c.isProxifyingTreeNow&&(i.inherited=!0),f&&'object'==typeof f&&!c.proxifiedObjectsMap.has(f)&&(c.parenthoodMap.set(f,{parent:d,path:e}),f=c._proxifyObjectTreeRecursively(d,f,e));const j={op:'remove',path:h};if('undefined'!=typeof f){if(Array.isArray(d)&&!Number.isInteger(+e.toString()))return Reflect.set(d,e,f);j.op='add',d.hasOwnProperty(e)&&('undefined'!=typeof d[e]||Array.isArray(d))&&(j.op='replace'),j.value=f}else if(!Array.isArray(d)&&!d.hasOwnProperty(e))return Reflect.set(d,e,f);else{Array.isArray(d)&&(j.op='replace',j.value=null);const a=c.proxifiedObjectsMap.get(d[e]);a&&(c.parenthoodMap.delete(d[e]),c.disableTrapsForProxy(a),c.proxifiedObjectsMap.delete(a))}const k=Reflect.set(d,e,f);return c.defaultCallback(j),k}function d(c,d,e){if('undefined'!=typeof d[e]){const f=b(c,d),g=f+'/'+a(e),h=c.proxifiedObjectsMap.get(d[e]);h&&(h.inherited?h.inherited=!1:(c.parenthoodMap.delete(h.originalObject),c.disableTrapsForProxy(h),c.proxifiedObjectsMap.delete(d[e])));const i=Reflect.deleteProperty(d,e);return c.defaultCallback({op:'remove',path:g}),i}}function e(){this.defaultCallback=(a)=>{this.isRecording&&this.patches.push(a),this.userCallback&&this.userCallback(a)},this.isObserving=!0}function f(){this.defaultCallback=()=>{},this.isObserving=!1}function g(a,b){this.isProxifyingTreeNow=!1,this.isObserving=!1,this.proxifiedObjectsMap=new Map,this.parenthoodMap=new Map,'boolean'!=typeof b&&(b=!0),this.showDetachedWarning=b,this.originalObject=a,this.cachedProxy=null,this.isRecording=!1,this.userCallback,this.resume=e.bind(this),this.pause=f.bind(this)}return g.deepClone=function(a){switch(typeof a){case'object':return JSON.parse(JSON.stringify(a));case'undefined':return null;default:return a;}},g.escapePathComponent=a,g.prototype.generateProxyAtPath=function(a,b,e){if(!b)return b;const f={set:(a,b,d,e)=>c(this,a,b,d,e),deleteProperty:(a,b)=>d(this,a,b)},g=Proxy.revocable(b,f);return g.trapsInstance=f,g.originalObject=b,this.parenthoodMap.set(b,{parent:a,path:e}),this.proxifiedObjectsMap.set(g.proxy,g),g.proxy},g.prototype._proxifyObjectTreeRecursively=function(b,c,d){for(let e in c)c.hasOwnProperty(e)&&c[e]instanceof Object&&(c[e]=this._proxifyObjectTreeRecursively(c,c[e],a(e)));return this.generateProxyAtPath(b,c,d)},g.prototype.proxifyObjectTree=function(a){this.pause(),this.isProxifyingTreeNow=!0;const b=this._proxifyObjectTreeRecursively(void 0,a,'');return this.isProxifyingTreeNow=!1,this.resume(),b},g.prototype.disableTrapsForProxy=function(a){if(this.showDetachedWarning){const b='You\'re accessing an object that is detached from the observedObject tree, see https://github.com/Palindrom/JSONPatcherProxy#detached-objects';a.trapsInstance.set=(a,c,d)=>(console.warn(b),Reflect.set(a,c,d)),a.trapsInstance.set=(a,c,d)=>(console.warn(b),Reflect.set(a,c,d)),a.trapsInstance.deleteProperty=(a,b)=>Reflect.deleteProperty(a,b)}else delete a.trapsInstance.set,delete a.trapsInstance.get,delete a.trapsInstance.deleteProperty},g.prototype.observe=function(a,b){if(!a&&!b)throw new Error('You need to either record changes or pass a callback');return this.isRecording=a,this.userCallback=b,a&&(this.patches=[]),this.cachedProxy=this.proxifyObjectTree(this.originalObject),this.cachedProxy},g.prototype.generate=function(){if(!this.isRecording)throw new Error('You should set record to true to get patches later');return this.patches.splice(0,this.patches.length)},g.prototype.revoke=function(){this.proxifiedObjectsMap.forEach((a)=>{a.revoke()})},g.prototype.disableTraps=function(){this.proxifiedObjectsMap.forEach(this.disableTrapsForProxy,this)},g}();a.exports=b,a.exports.default=b}]);